
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author lalos
 */
public class uiAutomata extends javax.swing.JFrame {
    ArrayList<Character> alfabeto;
    ArrayList<Integer> estados;
    int inicial;
    ArrayList<Integer> finales;
    char tabla[][];
    int estadoActual;
    int col=0, fil=0;
    JFileChooser seleccionar;
    File archivo;
    /**
     * Creates new form uiAutomata
     */
    public uiAutomata() {
        initComponents();
        seleccionar = new JFileChooser();
        archivo = new File("");
        tabla=null;
        alfabeto= new ArrayList();
        estados= new ArrayList();
        finales= new ArrayList();
    }
    
    public String AbrirArchivo(File Archivo){
        String documento="";
        FileInputStream entrada;
        try{
            entrada =  new FileInputStream(Archivo);
            documento = new Scanner(entrada).useDelimiter("\\A").next();
            entrada.close();
            
        }catch (IOException e){
            return e.getMessage();
        }
        return documento;
    }
    
    public void guardarTabla(String contenido){
        String[] lineas = contenido.split("\n");
        int i,j;
        String[] tmp;
        //Revisamos las lineas del documento
        //**********************************
        //Alfabeto
        //En la primera debe estar las letras del alfabeto separados por coma
        tmp = lineas[0].split(",");
        for(i=0; i<tmp.length; i++){
            System.out.println(tmp[i]);
            alfabeto.add(tmp[i].charAt(0));
        }
        //**********************************
        //Estados
        //En la segunda los estados, tambien serparados por coma
        tmp = lineas[1].split(",");
        for(i=0; i<tmp.length; i++){
            estados.add(Integer.parseInt(tmp[i].trim()));
        }
        //*********************************
        //Estado inicial
        //En la tercera el estado inicial
        inicial = Integer.parseInt(lineas[2].trim());
        estadoActual= inicial;
        //***********************************
        //Estados finales
        //En la cuarta los estados finales
        tmp = lineas[3].split(",");
        for(i=0; i<tmp.length; i++){
            finales.add(Integer.parseInt(tmp[i].trim()));
        }
        
        //Ya conocemos las dimensiones de la tabla
        fil = estados.size();
        col = alfabeto.size();
        System.out.println("filas: "+fil);
        System.out.println("columnas: "+col);
        
        //Ahora leemos las operaciones de transiciÃ³n (tabla)
        tabla = new char[fil][col];
        String[] valores;
        //Filas igual a 4 porque empieza la tabla a partir de la 4 linea
        for(i=4; i<(4+fil); i++){
            valores = lineas[i].split(" ");
            for(j=0; j<col; j++){
                //Los valores de la tabla empezaran en el (0,0)
                tabla[i-4][j]=valores[j].trim().charAt(0);
            }
        }
        //Ahora imprimimos bontido el archivo en la interfaz
        Texto.append("Estado inicial = "+inicial+"\n");
        Texto.append("Estados finales = "+lineas[3]+"\n");
        Texto.append("Tabla de transiciones: \n");
        String letras="";
        for(i=0; i<col; i++){
            letras+=alfabeto.get(i)+" ";
        }
        Texto.append("|--|"+letras+"\n");
        String tablita="";
        for(i=0; i<fil; i++){
            tablita+=estados.get(i)+" |";
            for(j=0; j<col; j++){
                tablita+=tabla[i][j]+" ";
            }
            tablita+="\n";
        }
        Texto.append(tablita);
    }
    public int esAlfabeto(char letra){
        int i;
        for(i=0; i<alfabeto.size(); i++){
            if(alfabeto.get(i)==letra){
                //Ya tenemos la columna a buscar
                return i;
            }
        }
        return -1;
    }
    public int esEstado(int estadoA){
        int i;
        for(i=0; i<estados.size(); i++){
            if(estados.get(i)==estadoA){
                return i;
            }
        }
        return -1;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        Texto = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        consultar = new javax.swing.JButton();
        palabra = new javax.swing.JTextField();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        abrirArchivo = new javax.swing.JMenuItem();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Texto.setEditable(false);
        Texto.setColumns(20);
        Texto.setRows(5);
        jScrollPane1.setViewportView(Texto);

        jLabel1.setText("Ingresa una cadena");

        consultar.setText("Consultar");
        consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarActionPerformed(evt);
            }
        });

        palabra.setMaximumSize(new java.awt.Dimension(6, 50));

        jMenu5.setText("Archivo");

        abrirArchivo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        abrirArchivo.setText("abrir");
        abrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirArchivoActionPerformed(evt);
            }
        });
        jMenu5.add(abrirArchivo);

        jMenuBar3.add(jMenu5);

        setJMenuBar(jMenuBar3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(consultar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 32, Short.MAX_VALUE))
                    .addComponent(palabra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(palabra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(consultar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarActionPerformed
        //guadamos los caracteres ingresados
        int posCol, posFila;
        String aux="";
        String word = this.palabra.getText();
        if(word.isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingresa un valor para comrobar.");
        }else
        if(tabla == null){
            JOptionPane.showMessageDialog(null, "Favor de abrir un archivo.");
        }
        else
        {
            //Hacemos un ciclo letra por letra
            char letra;
            for(int i=0; i<word.length(); i++){
                letra = word.charAt(i);
                System.out.println("**************Leyendo siguiente letra***************");
                System.out.println("Estado actual: "+estadoActual);
                System.out.println("Letra ingresada: "+String.valueOf(letra));
                posCol = esAlfabeto(letra);
                posFila = esEstado(estadoActual);
                System.out.println("Tabla[ "+posFila+"]["+posCol+"]");
                if(posCol==-1){
                    JOptionPane.showMessageDialog(null, "La letra '"+letra+"' no es parte del alfabeto");
                    break;
                }
                else{
                    if('-'!=(tabla[posFila][posCol])){
                        aux = String.valueOf(tabla[posFila][posCol]);
                        estadoActual=Integer.parseInt(aux);
                        System.out.println("Cambio estado a: "+estadoActual);
                    }
                    else{
                        System.out.println("Incorrecto, no cambia de estado: "+estadoActual);
                        estadoActual='-';
                        break;
                    }
                }
            }
            boolean correcto=false;
            for(int i=0; i<finales.size(); i++){
                if (estadoActual == finales.get(i)) {
                    correcto=true;
                    break;
                }
            }
            if(correcto)
                JOptionPane.showMessageDialog(null, "Â¡Â¡ExpresiÃ³n correcta!!");
            else JOptionPane.showMessageDialog(null, "ExpresiÃ³n incorrecta...");
            estadoActual=inicial;
        }
    }//GEN-LAST:event_consultarActionPerformed

    private void abrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirArchivoActionPerformed
        if(seleccionar.showDialog(null,"Abrir")==JFileChooser.APPROVE_OPTION){
            archivo=seleccionar.getSelectedFile();
            if(archivo.canRead()){
                if(archivo.getName().endsWith(".txt")){
                    alfabeto.clear();
                    estados.clear();
                    finales.clear();
                    String documento=AbrirArchivo(archivo);
                    guardarTabla(documento);
                }else{
                    JOptionPane.showMessageDialog(null,"Archivo no compatible");
                }
            }
        }
    }//GEN-LAST:event_abrirArchivoActionPerformed

    public static void main(String[] args) {
        uiAutomata w = new uiAutomata();
        w.setTitle("Automata?");
        w.setLocationRelativeTo(null);
        w.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Texto;
    private javax.swing.JMenuItem abrirArchivo;
    private javax.swing.JButton consultar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField palabra;
    // End of variables declaration//GEN-END:variables
}